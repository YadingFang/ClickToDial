openapi: 3.0.0

info:
  title: Click to Dial Service API
  description: |
    The Click to Dial API refers to the ability of users to initiate a call request through an enterprise platform or application. The Click to Dial API receives the request and processes it, subsequently connecting both the calling and called parties. Once the parties answer the call, it enables point-to-point voice communication between them.For specific details, please refer to [click-to-dial_API.md](/documentation/API_documentation/click-to-dial_API.md)

    # Introduction

    The Click to Dial API displays the enterprise business number to both users during the call to hide the numbers of both the calling and called parties, effectively protecting user privacy. Real-time feedback on call status assists in managing the call process for the enterprise. Enterprise members share a pool of minutes, with the enterprise bearing unified payment, eliminating issues such as exceeding limits or wasting leftover package resources, thus reducing costs and increasing efficiency for the enterprise.

    # API functionality

    Based on the Click-to-Dial API, users can initiate and terminate click-to-call sessions. The Click-to-Call API has the following features:

    * The API user invokes the Click-to-Dial Begin Operation to establish a call between the caller and the callee.
    * The API user invokes the Click-to-Dial Release Operation to end the call between the caller and the callee.
    * The API user can optionally specify a callback URL (parameter) to receive status notifications at that URL. <br>

    # Authorization and authentication

    The "Camara Security and Interoperability Profile" provides details of how an API consumer requests an access token. Please refer to Identity and Consent Management (https://github.com/camaraproject/IdentityAndConsentManagement/) for the released version of the profile.

    The specific authorization flows to be used will be agreed upon during the onboarding process, happening between the API consumer and the API provider, taking into account the declared purpose for accessing the API, whilst also being subject to the prevailing legal framework dictated by local legislation.

    In cases where personal data is processed by the API and users can exercise their rights through mechanisms such as opt-in and/or opt-out, the use of three-legged access tokens is mandatory. This ensures that the API remains in compliance with privacy regulations, upholding the principles of transparency and user-centric privacy-by-design.

    # Further info and support

    (FAQs will be added in a later version of the documentation)
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0-alpha.1
  x-camara-commonalities: 0.5

externalDocs:
  description: Project documentation at Camara
  url: https://github.com/camaraproject/ClickToDial

servers:
  - url: '{apiRoot}/click-to-dial/v0.1alpha1'
    variables:
      apiRoot:
        default: http://localhost:9091
        description: API root, defined by the service provider, e.g. `api.example.com` or `api.example.com/somepath`

paths:
  /click-to-dial-begin:
    post:
      summary: The app calls this API to establish a call between caller and callee.
      operationId: ClickToDialBegin
      tags:
        - Click To Dial Begin
      parameters:
        - $ref: "#/components/parameters/x-correlator"
      requestBody:
        description: Contains the information for the creation the resource.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClickToDialBeginRequest'
      callbacks:
        notifications:
          "{$request.body#/sink}":
            post:
              summary: Provisioning notifications callback
              description: |
                Important: this endpoint is to be implemented by the API consumer.The Click To Dial server will call this endpoint whenever any Click To Dial provisioning change related event occurs.Currently only `CALL_STATUS_CHANGED` event is defined.
              operationId: postProvisioningNotification
              parameters:
                - $ref: "#/components/parameters/x-correlator"
              requestBody:
                required: true
                content:
                  application/cloudevents+json:
                    schema:
                      $ref: "#/components/schemas/CloudEvent"
                    examples:
                      CALL_STATUS_CHANGED_EXAMPLE:
                        $ref: "#/components/examples/CALL_STATUS_CHANGED_EXAMPLE"
              responses:
                "204":
                  description: Successful notification
                  headers:
                    x-correlator:
                      $ref: "#/components/headers/x-correlator"
                "400":
                  $ref: "#/components/responses/Generic400"
                "401":
                  $ref: "#/components/responses/Generic401"
                "403":
                  $ref: "#/components/responses/Generic403"
      responses:
        '200':
          description:  The result of Click to Dial Begin 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClickToDialBeginResponse"
        '400':
          $ref: '#/components/responses/Generic400'
        '403':
          $ref: '#/components/responses/Generic403'
      security:
        - openId:
            - "click-to-dial:click-to-dial:begin"

  /click-to-dial-release/{callidentifier}:
    delete:
      summary: The app calls this API to release a call.
      operationId: ClickToDialRelease
      parameters:
        - name: callidentifier
          in: path
          description: Call identifier that was obtained from the clicktodialbegin operation
          required: true
          schema:
            $ref: "#/components/schemas/callidentifier"
        - $ref: "#/components/parameters/x-correlator"
      tags:
        - Click To Dial Release
      responses:
        '200':
          description:  Successful notification 
        '400':
          $ref: '#/components/responses/Generic400'
        '403':
          $ref: '#/components/responses/Generic403'
      security:
        - openId:
            - "click-to-dial:click-to-dial:release"      

  /recording-download/{callidentifier}:
    get:
      summary: The app download the recording.
      operationId: RecordingDownload
      parameters:
        - name: callidentifier
          in: path
          description: Call identifier that was obtained from the clicktodialbegin operation
          required: true
          schema:
            $ref: "#/components/schemas/callidentifier"
        - $ref: "#/components/parameters/x-correlator"
      tags:
        - Recording Download
      responses:
        '200':
          description:  The result of Click to Dial Begin 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecordingDownloadResponse"
        '400':
          $ref: '#/components/responses/Generic400'
        '403':
          $ref: '#/components/responses/Generic403'
      security:
        - openId:
            - "click-to-dial:click-to-dial:recording-download"
          
components:
  securitySchemes:
    openId:
      type: openIdConnect
      description: This API uses OpenID Connect for authentication and authorization.
      openIdConnectUrl: "https://example.com/.well-known/openid-configuration"
    oAuth2ClientCredentials:
      type: oauth2
      description: This API uses OAuth 2 with the client credentials grant flow.
      flows:
        clientCredentials:
          tokenUrl: "{tokenUrl}"
          scopes: {}
    apiKey:
      type: apiKey
      description: API key to authorize requests
      name: apikey
      in: query
    
  headers:
    x-correlator:
      description: Correlation id for the different services
      schema:
        type: string
        pattern: '^[a-zA-Z0-9-]{0,55}$'
        example: 'b4333c46-49c0-4f62-80d7-f0ef930f1c46'
  
  parameters:
    x-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      schema:
        type: string
        pattern: '^[a-zA-Z0-9-]{0,55}$'
        example: 'b4333c46-49c0-4f62-80d7-f0ef930f1c46'
      
  schemas:
    ClickToDialBeginRequest:
      type: object
      properties:
        caller:
          $ref: '#/components/schemas/caller'
        callee:
          $ref: '#/components/schemas/callee'  
        sink:
          $ref: '#/components/schemas/sink'
        sinkCredential:
          $ref: '#/components/schemas/sinkCredential'
      required:
        - caller
        - callee 
    caller:
      type: string
      description: Caller number, and the number format follows E.164
      pattern: '^\+[1-9]\d{1,14}$'
      example: '+12345678'
    sink:
      type: string
      format: uri
      description: The address to which events shall be delivered, using the HTTP protocol.
      example: "https://endpoint.example.com/sink"
    sinkCredential:
      $ref: "#/components/schemas/SinkCredential"
    callee:
      type: string
      description: Callee number, and the number format follows E.164
      pattern: '^\+[1-9]\d{1,14}$'
      example: '+12345678'  
    SinkCredential:
      description: A sink credential provides authentication or authorization information necessary to enable delivery of events to a target.
      type: object
      properties:
        credentialType:
          type: string
          enum:
            - PLAIN
            - ACCESSTOKEN
            - REFRESHTOKEN
          description: "The type of the credential."
      discriminator:
        propertyName: credentialType
        mapping:
          PLAIN: "#/components/schemas/PlainCredential"
          ACCESSTOKEN: "#/components/schemas/AccessTokenCredential"
          REFRESHTOKEN: "#/components/schemas/RefreshTokenCredential"
      required:
        - credentialType
    PlainCredential:
      type: object
      description: A plain credential as a combination of an identifier and a secret.
      allOf:
        - $ref: "#/components/schemas/SinkCredential"
        - type: object
          required:
            - identifier
            - secret
          properties:
            identifier:
              description: The identifier might be an account or username.
              type: string
            secret:
              description: The secret might be a password or passphrase.
              type: string

    AccessTokenCredential:
      type: object
      description: An access token credential.
      allOf:
        - $ref: "#/components/schemas/SinkCredential"
        - type: object
          properties:
            accessToken:
              description: REQUIRED. An access token is a previously acquired token granting access to the target resource.
              type: string
            accessTokenExpiresUtc:
              type: string
              format: date-time
              description: REQUIRED. An absolute UTC instant at which the token shall be considered expired.
            accessTokenType:
              description: REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)).
              type: string
              enum:
                - bearer
          required:
            - accessToken
            - accessTokenExpiresUtc
            - accessTokenType

    RefreshTokenCredential:
      type: object
      description: An access token credential with a refresh token.
      allOf:
        - $ref: "#/components/schemas/SinkCredential"
        - type: object
          properties:
            accessToken:
              description: REQUIRED. An access token is a previously acquired token granting access to the target resource.
              type: string
            accessTokenExpiresUtc:
              type: string
              format: date-time
              description: REQUIRED. An absolute UTC instant at which the token shall be considered expired.
            accessTokenType:
              description: REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)).
              type: string
              enum:
                - bearer
            refreshToken:
              description: REQUIRED. An refresh token credential used to acquire access tokens.
              type: string
            refreshTokenEndpoint:
              type: string
              format: uri
              description: REQUIRED. A URL at which the refresh token can be traded for an access token.
      required:
        - accessToken
        - accessTokenExpiresUtc
        - accessTokenType
        - refreshToken
        - refreshTokenEndpoint

    ClickToDialBeginResponse:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/code'
        description:
          $ref: '#/components/schemas/description'
        result:
          $ref: '#/components/schemas/result'
      required:
        - code
        - description    
        - result
    code:
      type: string
      description: Response code
      example: '0000000'    
    description:
      type: string
      description: Response description
      example: 'Success'  
      
    result:
      type: object
      properties:
        callidentifier:
          $ref: '#/components/schemas/callidentifier'
      required:
        - callidentifier 

    callidentifier:
      type: string
      description: Call identification
      example: 'A010B020'          

    ClickToDialStatusNotifyRequest:
      type: object
      properties:
        caller:
          $ref: '#/components/schemas/caller'
        callee:
          $ref: '#/components/schemas/callee'  
        status:
          $ref: '#/components/schemas/status'  
        reason:
          $ref: '#/components/schemas/reason'         
        recordingResult:
          $ref: '#/components/schemas/recordingResult'        
        recordingId:
          $ref: '#/components/schemas/recordingId'        
        callDuration:
          $ref: '#/components/schemas/callDuration'            
        timeStamp:
          $ref: '#/components/schemas/timeStamp'            
      required:
        - caller
        - callee 
        - status
        - timeStamp
    status:
      type: string
      enum:
        - CallingCaller
        - CallingCallee
        - Connected
        - Disconnected
      description: Call status
      example: 'CallingCaller'
    reason:
      type: string
      enum:
        - HangUp
        - CallerBusy
        - CallerNoAnswer
        - CallerFailure
        - CallerAbandon
        - CalleeBusy
        - CalleeNoAnswer
        - CalleeFailure
        - Other
      description: This field indicates the disconnection reason. This field is mandatory when status is "Disconnected".
      example: 'HangUp'
    recordingResult:
      type: string
      enum:
        - Success
        - NoRecord
        - Fail
      description: Recording Result. This field is mandatory when Recording is "On".
      example: 'Success'      
    recordingId:
      type: string
      description: Recording Id. This field is mandatory when recordingResult is "Success".
      example: '20230101120001'          
    callDuration:
      type: string
      description: This field indicates the duration of the calls, in seconds. This field is mandatory when status is "Disconnected".
      example: '1600'         
    timeStamp:
      type: string
      description: Time stamp, UTC time..
      example: '2017-12-04T18:07:57Z'       

    RecordingDownloadResponse:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/code'
        description:
          $ref: '#/components/schemas/description'
        result:
          $ref: '#/components/schemas/filedata'
      required:
        - code
        - description    
        - filedata
    filedata:
      type: string
      description: The voice file content.The encoding format can be implemented in the base64.
      example: ''  
      
    ErrorInfo: 
      description: Common schema for errors
      type: object
      properties:
        status:
          type: integer
          description: HTTP status code returned along with this error response
        code:
          type: string
          description: Code given to this error
        message:
          type: string
          description: Detailed error description
      required:
        - status
        - code
        - message

    CloudEvent:
      description: Event compliant with the CloudEvents specification
      required:
        - id
        - source
        - specversion
        - type
        - time
      properties:
        id:
          description: Identifier of this event, that must be unique in the source context.
          type: string
        source:
          description: Identifies the context in which an event happened in the specific Provider Implementation.
          type: string
          format: uri-reference
        type:
          description: The type of the event.
          type: string
          enum:
            - "org.camaraproject.qod-provisioning.v0.status-changed"
        specversion:
          description: Version of the specification to which this event conforms (must be 1.0 if it conforms to cloudevents 1.0.2 version)
          type: string
          enum:
            - "1.0"
        datacontenttype:
          description: 'media-type that describes the event payload encoding, must be "application/json" for CAMARA APIs'
          type: string
          enum:
            - "application/json"
        data:
          description: Event notification details payload, which depends on the event type
          type: object
        time:
          description: |
            Timestamp of when the occurrence happened. It must follow RFC 3339
          type: string
          format: date-time
          
  responses:
    Generic400:
      description: Bad Request
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_OUT_OF_RANGE:
              description: Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested
              value:
                status: 400
                code: OUT_OF_RANGE
                message: Client specified an invalid range. 
                
    Generic401:
      description: Unauthorized
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials.
            GENERIC_401_AUTHENTICATION_REQUIRED:
              description: New authentication is needed, authentication is no longer valid
              value:
                status: 401
                code: AUTHENTICATION_REQUIRED
                message: New authentication is required.
                    
    Generic403:
      description: Forbidden
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
            GENERIC_403_INVALID_TOKEN_CONTEXT:
              description: Reflect some inconsistency between information in some field of the API and the related OAuth2 Token
              value:
                status: 403
                code: INVALID_TOKEN_CONTEXT
                message: "{{field}} is not consistent with access token."        

    Generic404:
      description: Not found
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.

  examples:
    CALL_STATUS_CHANGED_EXAMPLE:
      description: Provisioning status changed
      summary: Cloud event example for QoD provisioning status change to UNAVAILABLE due to NETWORK_TERMINATED
      value:
        id: 83a0d986-0866-4f38-b8c0-fc65bfcda452
        source: https://api.example.com/clicktodial/v0.1/clicktodialstatusnotify/123e4567-e89b-12d3-a456-426614174000
        specversion: "1.0"
        type: org.camaraproject.clicktodial.v0.status-changed
        time: 2021-12-12T00:00:00Z
        data:
          caller: 12345678,
          callee: 12345678,
          status: CallingCaller,
          reason: HangUp,
          recordingResult: Success,
          recordingId: 20230101120001,
          callDuration: 1600,
          timeStamp: 2017-12-04T18:07:57Z
